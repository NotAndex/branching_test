# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]


permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get branch names
      id: branch-name
      uses: tj-actions/branch-names@v6

    - name: Current branch name
      run: |
        echo "${{ steps.branch-name.outputs.current_branch }}"
      # Outputs: "feature/test" current PR branch.

    - name: Running on a non tag based branch and a PR branch.
      if: steps.branch-name.outputs.is_default == 'false'
      run: |
        echo "Running on branch: ${{ steps.branch-name.outputs.current_branch }}"
      # Outputs: "Running on branch: feature/test".

    - name: Running on a pull request (i.e non tag based branch).
      if: steps.branch-name.outputs.is_tag == 'false' && steps.branch-name.outputs.is_default == 'false'
      run: |
        echo "Running on branch: ${{ steps.branch-name.outputs.current_branch }}"
      # Outputs: "Running on branch: feature/test".

    - name: Get Ref branch name
      run: |
        echo "${{ steps.branch-name.outputs.ref_branch }}"
      #  Outputs: "1/merge"

    - name: Get Head Ref branch name (i.e The current pull request branch)
      run: |
        echo "${{ steps.branch-name.outputs.head_ref_branch }}"
      # Outputs: "feature/test" current PR branch.

    - name: Get Base Ref branch name (i.e The target of a pull request.)
      run: |
        echo "${{ steps.branch-name.outputs.base_ref_branch }}"
      # Outputs: "main".

    - name: Default branch name
      run: |
        echo "${{ steps.branch-name.outputs.default_branch }}"
        # Outputs: "main" the default branch.    
#     - name: Check pull_requ
#       run: echo ${{ github.event.pull_request.head.ref }}
      
#     - name: Check output head
#       run: echo ${{ github.event.head.ref }}         
    
#     - name: Set output
#       id: vars
#       run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

#     - name: Check output
#       run: echo ${{ steps.vars.outputs.short_ref }}
 #   
    
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v4
#       with:
#         python-version: "3.10"
#     - run: python code/${{ github.event.head_commit.message }}/run.py 

